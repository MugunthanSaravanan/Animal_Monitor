{"ast":null,"code":"var _jsxFileName = \"/Users/mugunthansaravanan/Desktop/Mini-Projects/count/Final/Client/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport { db } from \"../firebase\"; // Firebase setup for Firestore\nimport { collection, addDoc } from \"firebase/firestore\"; // Firestore methods\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    user\n  } = useUserAuth();\n  const [name, setName] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [speciesList, setSpeciesList] = useState([{\n    species: \"\",\n    count: \"\"\n  }]);\n  const navigate = useNavigate(); // Initialize navigate\n\n  // Add more species input\n  const handleAddSpecies = () => {\n    setSpeciesList([...speciesList, {\n      species: \"\",\n      count: \"\"\n    }]);\n  };\n\n  // Handle species input change\n  const handleSpeciesChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newSpeciesList = [...speciesList];\n    newSpeciesList[index][name] = value;\n    setSpeciesList(newSpeciesList);\n  };\n\n  // Handle form submission\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Store form data in Firebase under the user's ID\n      await addDoc(collection(db, \"users\", user.uid, \"animalData\"), {\n        name,\n        mobile,\n        speciesList\n      });\n\n      // Prepare expected counts from speciesList\n      const expectedCounts = {};\n      speciesList.forEach(speciesData => {\n        expectedCounts[speciesData.species] = parseInt(speciesData.count) || 0;\n      });\n\n      // Generate a message showing animal names and their counts\n      const speciesInfo = speciesList.map(speciesData => `${speciesData.species}: ${speciesData.count}`).join(\", \");\n      alert(`Form data submitted successfully! Animal Info: ${speciesInfo}`);\n\n      // Navigate to the detection page after successful form submission, passing mobile and expectedCounts\n      navigate(\"/detect\", {\n        state: {\n          mobileNumber: mobile,\n          expectedCounts\n        }\n      });\n    } catch (error) {\n      console.error(\"Error adding document: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Animal Information Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formMobile\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Mobile Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your mobile number\",\n          value: mobile,\n          onChange: e => setMobile(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), speciesList.map((speciesData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: `formSpecies${index}`,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Animal Species\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter animal species\",\n            name: \"species\",\n            value: speciesData.species,\n            onChange: e => handleSpeciesChange(index, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: `formCount${index}`,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Animal Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter animal count\",\n            name: \"count\",\n            value: speciesData.count,\n            onChange: e => handleSpeciesChange(index, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleAddSpecies,\n          children: \"Add More Species\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"YcDuqrw9qZP7flHiOJNoHP9KwYY=\", false, function () {\n  return [useUserAuth, useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Button","Form","useUserAuth","db","collection","addDoc","useNavigate","jsxDEV","_jsxDEV","Home","_s","user","name","setName","mobile","setMobile","speciesList","setSpeciesList","species","count","navigate","handleAddSpecies","handleSpeciesChange","index","e","value","target","newSpeciesList","handleSubmit","preventDefault","uid","expectedCounts","forEach","speciesData","parseInt","speciesInfo","map","join","alert","state","mobileNumber","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","required","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/mugunthansaravanan/Desktop/Mini-Projects/count/Final/Client/src/components/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport { db } from \"../firebase\"; // Firebase setup for Firestore\nimport { collection, addDoc } from \"firebase/firestore\"; // Firestore methods\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate hook\n\nconst Home = () => {\n  const { user } = useUserAuth();\n  const [name, setName] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [speciesList, setSpeciesList] = useState([{ species: \"\", count: \"\" }]);\n  const navigate = useNavigate(); // Initialize navigate\n\n  // Add more species input\n  const handleAddSpecies = () => {\n    setSpeciesList([...speciesList, { species: \"\", count: \"\" }]);\n  };\n\n  // Handle species input change\n  const handleSpeciesChange = (index, e) => {\n    const { name, value } = e.target;\n    const newSpeciesList = [...speciesList];\n    newSpeciesList[index][name] = value;\n    setSpeciesList(newSpeciesList);\n  };\n\n  // Handle form submission\n  // Handle form submission\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  try {\n    // Store form data in Firebase under the user's ID\n    await addDoc(collection(db, \"users\", user.uid, \"animalData\"), {\n      name,\n      mobile,\n      speciesList,\n    });\n\n    // Prepare expected counts from speciesList\n    const expectedCounts = {};\n    speciesList.forEach(speciesData => {\n      expectedCounts[speciesData.species] = parseInt(speciesData.count) || 0;\n    });\n\n    // Generate a message showing animal names and their counts\n    const speciesInfo = speciesList.map(speciesData => `${speciesData.species}: ${speciesData.count}`).join(\", \");\n    alert(`Form data submitted successfully! Animal Info: ${speciesInfo}`);\n\n    // Navigate to the detection page after successful form submission, passing mobile and expectedCounts\n    navigate(\"/detect\", { state: { mobileNumber: mobile, expectedCounts } });\n  } catch (error) {\n    console.error(\"Error adding document: \", error);\n  }\n};\n\n\n  return (\n    <div className=\"p-4 box\">\n      <h2 className=\"mb-3\">Animal Information Form</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formMobile\">\n          <Form.Label>Mobile Number</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your mobile number\"\n            value={mobile}\n            onChange={(e) => setMobile(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        {speciesList.map((speciesData, index) => (\n          <div key={index}>\n            <Form.Group className=\"mb-3\" controlId={`formSpecies${index}`}>\n              <Form.Label>Animal Species</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter animal species\"\n                name=\"species\"\n                value={speciesData.species}\n                onChange={(e) => handleSpeciesChange(index, e)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId={`formCount${index}`}>\n              <Form.Label>Animal Count</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter animal count\"\n                name=\"count\"\n                value={speciesData.count}\n                onChange={(e) => handleSpeciesChange(index, e)}\n                required\n              />\n            </Form.Group>\n          </div>\n        ))}\n\n        <div className=\"d-grid gap-2\">\n          <Button variant=\"secondary\" onClick={handleAddSpecies}>\n            Add More Species\n          </Button>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}